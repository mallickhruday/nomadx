/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  ParsedData,
} from './models/data';

declare global {

  namespace StencilComponents {
    interface NomadxTable {
      'labelledby': string;
      'sortable': string;
    }
  }

  interface HTMLNomadxTableElement extends StencilComponents.NomadxTable, HTMLStencilElement {}

  var HTMLNomadxTableElement: {
    prototype: HTMLNomadxTableElement;
    new (): HTMLNomadxTableElement;
  };
  interface HTMLElementTagNameMap {
    'nomadx-table': HTMLNomadxTableElement;
  }
  interface ElementTagNameMap {
    'nomadx-table': HTMLNomadxTableElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'nomadx-table': JSXElements.NomadxTableAttributes;
    }
  }
  namespace JSXElements {
    export interface NomadxTableAttributes extends HTMLAttributes {
      'labelledby'?: string;
      'sortable'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface NomadxTableData {
      'data': any;
      'getData': () => ParsedData;
    }
  }

  interface HTMLNomadxTableDataElement extends StencilComponents.NomadxTableData, HTMLStencilElement {}

  var HTMLNomadxTableDataElement: {
    prototype: HTMLNomadxTableDataElement;
    new (): HTMLNomadxTableDataElement;
  };
  interface HTMLElementTagNameMap {
    'nomadx-table-data': HTMLNomadxTableDataElement;
  }
  interface ElementTagNameMap {
    'nomadx-table-data': HTMLNomadxTableDataElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'nomadx-table-data': JSXElements.NomadxTableDataAttributes;
    }
  }
  namespace JSXElements {
    export interface NomadxTableDataAttributes extends HTMLAttributes {
      'data'?: any;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface XNomadxTable {
      'data': any[][];
      'labelledby': string;
      'sortable': string;
      'striped': any;
    }
  }

  interface HTMLXNomadxTableElement extends StencilComponents.XNomadxTable, HTMLStencilElement {}

  var HTMLXNomadxTableElement: {
    prototype: HTMLXNomadxTableElement;
    new (): HTMLXNomadxTableElement;
  };
  interface HTMLElementTagNameMap {
    'x-nomadx-table': HTMLXNomadxTableElement;
  }
  interface ElementTagNameMap {
    'x-nomadx-table': HTMLXNomadxTableElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'x-nomadx-table': JSXElements.XNomadxTableAttributes;
    }
  }
  namespace JSXElements {
    export interface XNomadxTableAttributes extends HTMLAttributes {
      'data'?: any[][];
      'labelledby'?: string;
      'sortable'?: string;
      'striped'?: any;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;